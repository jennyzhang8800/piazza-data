{"aid": "igkpc6skeln4ag", "error": null, "result": {"default_anonymity": "no", "status": "active", "i_edits": [], "q_edits": [], "bookmarked": 8, "request_instructor": 0, "history": [{"uid": "hdjonbiyfs62ie", "anon": "no", "created": "2015-03-30T15:12:28Z", "content": "<p>我认为时钟置换算法是存在belady现象的。原因是&#xff0c;它不具备LRU的特殊栈特征。构造反例的思路是&#xff0c;分配指定数目的物理页面给一个进程&#xff0c;然后构造一个访问序列&#xff0c;你换出哪个页面&#xff0c;下一次就访问它。那么&#xff0c;对于这个访问序列&#xff0c;少一个物理页面时&#xff0c;它的缺页次数应该会少。</p>\n<p></p>\n<p>请有兴趣的同学尝试构造一个例子&#xff0c;并在这里回复。</p>", "subject": "时钟置换算法存在的Belady现象的反例&#xff1f;"}], "s_edits": [], "is_bookmarked": false, "tag_good_arr": ["hcrrjuyequh4bt"], "request_instructor_me": false, "my_favorite": false, "t": 1446635353700, "children": [{"uid": "hrhsj9t1wSn", "no_answer": 0, "created": "2015-03-30T15:50:54Z", "id": "i7w1yvct1nzjs", "updated": "2015-03-30T15:50:54Z", "subject": "<p></p>", "anon": "no", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 5, "bucket_name": "Last week", "no_upvotes": 0, "children": [], "type": "followup"}, {"is_tag_endorse": false, "created": "2015-04-01T03:54:37Z", "id": "i7y79fasipm2g4", "tag_endorse": [], "folders": [], "history": [{"uid": "hcrrjuyequh4bt", "anon": "no", "created": "2015-04-01T03:54:37Z", "content": "<p>此问题也许会再次在某个地方出现。:)</p>", "subject": ""}], "config": {}, "data": {"embed_links": []}, "bucket_order": 2, "bucket_name": "Today", "tag_endorse_arr": [], "children": [], "type": "i_answer"}, {"no_answer": 0, "created": "2015-04-05T02:14:01Z", "id": "i83tfh8kx44po", "updated": "2015-04-05T02:14:01Z", "subject": "<p>因如果所有页的访问位都为1时&#xff0c;clock算法将退化为FIFO&#xff0c;可以构造如下序列</p>\n<p>a, b, c, d, a, b, e, a, b, c, d, e</p>\n<p>当物理页帧为3时&#xff0c;缺页次数为9次&#xff0c;当物理页帧为4时&#xff0c;缺页次数为10次。</p>", "anon": "stud", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 5, "bucket_name": "Last week", "no_upvotes": 0, "children": [{"uid": "hdjonbiyfs62ie", "created": "2015-04-05T02:19:35Z", "id": "i83tmmmanwz73i", "updated": "2015-04-05T02:19:35Z", "subject": "<p>很好的解决思路。</p>\n<p></p>\n<p>细节还需要确认一下。如果可能&#xff0c;请给出完整的算法处理过程描述。</p>", "anon": "no", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 5, "bucket_name": "Last week", "children": [], "type": "feedback"}, {"created": "2015-04-08T07:01:49Z", "id": "i88e158ii7621y", "updated": "2015-04-08T07:01:49Z", "subject": "<p>对题主的看法我有几点不认同&#xff1a;</p>\n<p>1)感觉clock不能退化为FIFO&#xff0c;但是没有证明出来</p>\n<p>2)并不是说算法退化为FIFO之后就会造成belady&#xff0c;LRU在一定序列下可以退化为FIFO&#xff0c;但是造成他退化的那种访问序列并不能产生belady异常&#xff0c;能让FIFO退化的序列特征应该是系统频繁访问刚被置换出去的页&#xff0c;与FIFO的置换思路不吻合所以导致belady</p>\n<p>3)我试了一下题主给出的测例&#xff0c;也没有出现bealdy异常&#xff0c;但是不排除我算错的可能</p>", "anon": "full", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 4, "bucket_name": "This week", "children": [], "type": "feedback"}, {"uid": "hdjonbiyfs62ie", "created": "2015-04-09T01:17:02Z", "id": "i89h5lqp4yg6ei", "updated": "2015-04-09T01:17:02Z", "subject": "<p>好评。</p>\n<p></p>\n<p>你说的是对的&#xff0c;FIFO也并不是在所有情况下都一定会出现belady现象的。</p>\n<p></p>\n<p>请继续尝试给出可能的反例。</p>", "anon": "no", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 4, "bucket_name": "This week", "children": [], "type": "feedback"}, {"created": "2015-04-11T07:36:06Z", "id": "i8cpksd1ysn4uu", "updated": "2015-04-11T07:36:06Z", "subject": "<p><strong>依据上面的access pattern&#xff0c;访问过程如下</strong></p>\n<p><strong>1.当页面大小为3时</strong></p>\n<p><strong>access a: miss. Memory:[(&#39;a&#39;, 1)] head = 1</strong><br /><strong>access b: miss. Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1)] head = 2</strong><br /><strong>access c: miss. Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1)] head = 0</strong><br /><strong>access d: miss. swap out a Memory:[(&#39;d&#39;, 1), (&#39;b&#39;, 0), (&#39;c&#39;, 0)] head = 1</strong><br /><strong>access a: miss. swap out b Memory:[(&#39;d&#39;, 1), (&#39;a&#39;, 1), (&#39;c&#39;, 0)] head = 2</strong><br /><strong>access b: miss. swap out c Memory:[(&#39;d&#39;, 1), (&#39;a&#39;, 1), (&#39;b&#39;, 1)] head = 0</strong><br /><strong>access e: miss. swap out d Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 0), (&#39;b&#39;, 0)] head = 1</strong><br /><strong>access a: hit! Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 1), (&#39;b&#39;, 0)] head = 1</strong><br /><strong>access b: hit! Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 1), (&#39;b&#39;, 1)] head = 1</strong><br /><strong>access c: miss. swap out a Memory:[(&#39;e&#39;, 0), (&#39;c&#39;, 1), (&#39;b&#39;, 0)] head = 2</strong><br /><strong>access d: miss. swap out b Memory:[(&#39;e&#39;, 0), (&#39;c&#39;, 1), (&#39;d&#39;, 1)] head = 0</strong><br /><strong>access e: hit! Memory:[(&#39;e&#39;, 1), (&#39;c&#39;, 1), (&#39;d&#39;, 1)] head = 0</strong><br /><strong>miss = 9</strong></p>\n<p></p>\n<p><strong>2.当页面大小为4时</strong></p>\n<p><strong>access a: miss. Memory:[(&#39;a&#39;, 1)] head = 1<br />access b: miss. Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1)] head = 2<br />access c: miss. Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1)] head = 3<br />access d: miss. Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1), (&#39;d&#39;, 1)] head = 0<br />access a: hit! Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1), (&#39;d&#39;, 1)] head = 0<br />access b: hit! Memory:[(&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1), (&#39;d&#39;, 1)] head = 0<br />access e: miss. swap out a Memory:[(&#39;e&#39;, 1), (&#39;b&#39;, 0), (&#39;c&#39;, 0), (&#39;d&#39;, 0)] head = 1<br />access a: miss. swap out b Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 1), (&#39;c&#39;, 0), (&#39;d&#39;, 0)] head = 2<br />access b: miss. swap out c Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;d&#39;, 0)] head = 3<br />access c: miss. swap out d Memory:[(&#39;e&#39;, 1), (&#39;a&#39;, 1), (&#39;b&#39;, 1), (&#39;c&#39;, 1)] head = 0<br />access d: miss. swap out e Memory:[(&#39;d&#39;, 1), (&#39;a&#39;, 0), (&#39;b&#39;, 0), (&#39;c&#39;, 0)] head = 1<br />access e: miss. swap out a Memory:[(&#39;d&#39;, 1), (&#39;e&#39;, 1), (&#39;b&#39;, 0), (&#39;c&#39;, 0)] head = 2<br />miss = 10</strong></p>\n<p><strong></strong></p>\n<p><b>以上为程序给出的结果&#xff0c;确实出现了belady异常。</b></p>\n<p><b>不知道是否有算错的地方&#xff0c;还是理解有问题&#xff0c;请指正。</b></p>", "anon": "stud", "data": {"embed_links": null}, "config": {}, "folders": [], "bucket_order": 3, "bucket_name": "Yesterday", "d-bucket": "Yesterday", "children": [], "type": "feedback"}, {"uid": "hdjonbiyfs62ie", "created": "2015-04-11T14:55:27Z", "id": "i8d59snzs1b2xf", "updated": "2015-04-11T14:55:27Z", "subject": "<p>很严谨的回答。我确认你的回答是正确的。</p>", "anon": "no", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 2, "bucket_name": "Today", "children": [], "type": "feedback"}], "type": "followup"}], "type": "question", "unique_views": 86, "created": "2015-03-30T15:12:28Z", "id": "i7w0lgibx873yf", "no_answer": 0, "nr": 214, "data": {"embed_links": []}, "upvote_ids": [], "is_tag_good": false, "config": {}, "folders": ["quiz9"], "bucket_order": 2, "change_log": [{"uid": "hdjonbiyfs62ie", "when": "2015-03-30T15:12:28Z", "data": "i7w0lgieijd3yg", "anon": "no", "type": "create"}, {"uid": "hrhsj9t1wSn", "when": "2015-03-30T15:50:54Z", "to": "i7w0lgibx873yf", "anon": "no", "type": "followup"}, {"uid": "hcrrjuyequh4bt", "when": "2015-04-01T03:54:37Z", "data": "i7y79fbumuj2g5", "to": "i7w0lgibx873yf", "anon": "no", "type": "i_answer"}, {"when": "2015-04-05T02:14:02Z", "to": "i7w0lgibx873yf", "anon": "stud", "type": "followup"}, {"uid": "hdjonbiyfs62ie", "when": "2015-04-05T02:19:35Z", "to": "i7w0lgibx873yf", "anon": "no", "type": "feedback"}, {"when": "2015-04-08T07:01:49Z", "to": "i7w0lgibx873yf", "anon": "full", "type": "feedback"}, {"uid": "hdjonbiyfs62ie", "when": "2015-04-09T01:17:02Z", "to": "i7w0lgibx873yf", "anon": "no", "type": "feedback"}, {"when": "2015-04-11T07:36:06Z", "to": "i7w0lgibx873yf", "anon": "stud", "type": "feedback"}, {"uid": "hdjonbiyfs62ie", "when": "2015-04-11T14:55:27Z", "to": "i7w0lgibx873yf", "anon": "no", "type": "feedback"}], "bucket_name": "Today", "tags": ["instructor-question", "quiz9"], "no_answer_followup": 0, "num_favorites": 4, "tag_good": [{"class_sections": ["课程设计_i5j09fnsl7k5x0"], "name": "Yu Chen", "id": "hcrrjuyequh4bt", "role": "instructor", "facebook_id": null, "photo": "1378950179_35.png", "admin": true, "us": false}]}}